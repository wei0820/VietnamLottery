// Generated by view binder compiler. Do not edit!
package com.tools.payhelper.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import com.tools.payhelper.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityLoginBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final EditText edt;

  @NonNull
  public final EditText edt2;

  @NonNull
  public final EditText edt3;

  @NonNull
  public final Button loginbtn;

  @NonNull
  public final TextView text;

  @NonNull
  public final TextView text2;

  @NonNull
  public final TextView text3;

  private ActivityLoginBinding(@NonNull ConstraintLayout rootView, @NonNull EditText edt,
      @NonNull EditText edt2, @NonNull EditText edt3, @NonNull Button loginbtn,
      @NonNull TextView text, @NonNull TextView text2, @NonNull TextView text3) {
    this.rootView = rootView;
    this.edt = edt;
    this.edt2 = edt2;
    this.edt3 = edt3;
    this.loginbtn = loginbtn;
    this.text = text;
    this.text2 = text2;
    this.text3 = text3;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityLoginBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityLoginBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_login, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityLoginBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.edt;
      EditText edt = rootView.findViewById(id);
      if (edt == null) {
        break missingId;
      }

      id = R.id.edt2;
      EditText edt2 = rootView.findViewById(id);
      if (edt2 == null) {
        break missingId;
      }

      id = R.id.edt3;
      EditText edt3 = rootView.findViewById(id);
      if (edt3 == null) {
        break missingId;
      }

      id = R.id.loginbtn;
      Button loginbtn = rootView.findViewById(id);
      if (loginbtn == null) {
        break missingId;
      }

      id = R.id.text;
      TextView text = rootView.findViewById(id);
      if (text == null) {
        break missingId;
      }

      id = R.id.text2;
      TextView text2 = rootView.findViewById(id);
      if (text2 == null) {
        break missingId;
      }

      id = R.id.text3;
      TextView text3 = rootView.findViewById(id);
      if (text3 == null) {
        break missingId;
      }

      return new ActivityLoginBinding((ConstraintLayout) rootView, edt, edt2, edt3, loginbtn, text,
          text2, text3);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
